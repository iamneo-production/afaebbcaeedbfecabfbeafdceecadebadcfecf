{"ast":null,"code":"import { __decorate } from \"tslib\";\niimport;\n{\n  Component;\n}\nfrom;\n'@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nlet UserRegistrationComponent = class UserRegistrationComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.createForm();\n  }\n  createForm() {\n    this.registrationForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50), Validators.pattern('^[a-zA-Z]+$')]],\n      gender: new FormControl('', [Validators.required]),\n      country: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      age: new FormControl('', [])\n    });\n  }\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      // Form is valid, you can submit the data\n      console.log(this.registrationForm.value);\n    } else {\n      // Form is invalid, display error messages\n      this.validateFormFields(this.registrationForm);\n    }\n  }\n  validateFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateFormFields(control);\n      }\n    });\n  }\n};\nUserRegistrationComponent = __decorate([Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})], UserRegistrationComponent);\nexport { UserRegistrationComponent };","map":{"version":3,"names":["iimport","Component","from","FormGroup","Validators","FormControl","UserRegistrationComponent","constructor","fb","createForm","registrationForm","group","firstName","required","minLength","maxLength","pattern","gender","country","city","age","onSubmit","valid","console","log","value","validateFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsTouched","onlySelf","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/coder/project/workspace/angularapp/src/app/user-registration/user-registration.component.ts"],"sourcesContent":["iimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent {\n  registration Form: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.registrationForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50), Validators.pattern('^[a-zA-Z]+$')]],\n      gender: new FormControl('', [Validators.required]),\n      country: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      age: new FormControl('', [])\n    });\n  }\n\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      // Form is valid, you can submit the data\n      console.log(this.registrationForm.value);\n    } else {\n      // Form is invalid, display error messages\n      this.validateFormFields(this.registrationForm);\n    }\n  }\n\n  validateFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateFormFields(control);\n      }\n    });\n  }\n}\n\n"],"mappings":";AAAAA,OAAO;AAAC;EAAEC,SAAS;;AAAGC,IAAI;AAAC,eAAe;AAC1C,SAAsBC,SAAS,EAAEC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;AAOhF,IAAaC,yBAAyB,GAAtC,MAAaA,yBAAyB;EAGpCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACpCC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,EAAEV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EAAEX,UAAU,CAACY,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;MAC5HC,MAAM,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACS,QAAQ,CAAC,CAAC;MAClDK,OAAO,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACS,QAAQ,CAAC,CAAC;MACnDM,IAAI,EAAE,IAAId,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACS,QAAQ,CAAC,CAAC;MAChDO,GAAG,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,EAAE;KAC5B,CAAC;EACJ;EAEAgB,QAAQA,CAAA;IACN,IAAI,IAAI,CAACX,gBAAgB,CAACY,KAAK,EAAE;MAC/B;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,gBAAgB,CAACe,KAAK,CAAC;KACzC,MAAM;MACL;MACA,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAAChB,gBAAgB,CAAC;;EAElD;EAEAgB,kBAAkBA,CAACC,SAAoB;IACrCC,MAAM,CAACC,IAAI,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACC,OAAO,CAACC,KAAK,IAAG;MAC9C,MAAMC,OAAO,GAAGN,SAAS,CAACO,GAAG,CAACF,KAAK,CAAC;MAEpC,IAAIC,OAAO,YAAY5B,WAAW,EAAE;QAClC4B,OAAO,CAACE,aAAa,CAAC;UAAEC,QAAQ,EAAE;QAAI,CAAE,CAAC;OAC1C,MAAM,IAAIH,OAAO,YAAY9B,SAAS,EAAE;QACvC,IAAI,CAACuB,kBAAkB,CAACO,OAAO,CAAC;;IAEpC,CAAC,CAAC;EACJ;CACD;AAtCY3B,yBAAyB,GAAA+B,UAAA,EALrCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWlC,yBAAyB,CAsCrC;SAtCYA,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}